# permute by sorting

import random
def permuteSort(a):
    n = len(a)
    while (is_sorted(a)== False):
        shuffle(a)
def is_sorted(a):
    n = len(a)
    for i in range(0, n-1):
        if (a[i] > a[i+1] ):
            return False
        return True
def shuffle(a):
    n = len(a)
    for i in range (0,n):
        r = random.randint(0,n-1)
        a[i], a[r] = a[r], a[i]

a=[]
n=int(input("Enter the number of elements in array: "))
for i in range(0,n):
    print("Enter",i," element:")
    x=int(input())
    a.append(x)
    
print('array before sorting' )
print(a)
permuteSort(a)

print("Sorted array :")
print(a)


# Permute by cyclic

def permute(a, l, r):
    if l == r:
        print(a)
    else:
        for i in range(l, r + 1):
            a[l], a[i] = a[i], a[l]
            permute(a, l + 1, r)
            a[l], a[i] = a[i], a[l]
            
data = [1,8,9]
n = len(data)
a = list(data)
permute(a, 0, n - 1)